-동적 웹어플리케이션 컴포넌트

Servlet이 요청에 따라 다른값을 받아올 수 있으므로 동적 웹어플리케이션 컴포넌트라고 하는 것 같다.





-java 확장자

Servlet은 결국 java라고 봐도 무방할것 같다.





-클라이언트의 요청에 동적으로 작동하고, 응답은 html을 이용

JSP파일이 사용자에게 요청될 때 Servlet파일로 변환되어 응답이 보내진다 하는것 때문에 해당 특징이 있는것 같다.





-Java thread이용하여 동작 (Servlet을 이용할 떄 가장 강점이라고 강조하셨다.)

굉장히 많은 요청이 들어올 때에도 thread를 이용하다보니 서버의 부하가 적게 걸리는 장점이 있다라고 하셨다.

요청이 있을때마다 프로세스를 생성하는 것보다 서버의 부하가 확실하게 적겠지만 정확히는 모르겠다.



대용량 트래픽을 다룰 때 주로 nginX서버를 앞단에 두는 경우를 여러번 본 기억이 있는데 의문이다.

사용자의 요청이 있을 때, 

아파치 웹서버는 요청 하나하나당 스레드를 생성하여 응답을 하고

nginX 웹서버는 큐에 모든걸 넣어 순서대로 응답을 한다한것을 본 흐릿한 기억이 있는데 추후 정확히 알고난뒤 다시 업데이트를 하겠다.





-MVC패턴에서 Controller로 이용됨.





-Servlet은 부모 class로 HttpServlet을 상속받아야 Servlet class가 된다.

ex) public class HelloWorld extends HttpServlet {

    ..............

}





-doGet 메소드와 doPost 메소드를 가지고 해당 메소드의 내용이 사용자 클라이언트 웹 브라우저에 실행되거나 출력된다.





-Servlet은 반드시 Mapping을 하여 사용한다.

ex HelloWorld.java 파일을 HWorld로 mapping하였을 때

     기존 경로 : http://localhost:8080/helloworld/servlet/com.javalec,ex.HelloWorld

URL 맵핑 경로 : http://localhost:8080/helloworld/HWorld



mapping을 사용하는 이유 : 너무 길고, 보안에 노출되어 있는 경로를 간단하게 mapping하는 것이다.

Application context뒤에 바로 mapping된 이름을 써주면 된다.



1. web.xml을 이용하는 방법

 

해당 방법으로는 http://localhost:8080/helloworld/hw 로 접속 가능하다.



2. 어노테이션을 이용한 서블릿 맵핑

HelloWorld class위에 @WebServlet(/"HWorld") 어노테이션을 추가 한다.

해당 방법으로는 http://localhost:8080/helloworld/HWorld로 접속 가능하다.



주소창을 이용해 위와 같이 입력하면 mapping된 servlet class에 접근하여 doGet메소드를 실행한다. 

(URL창을 이용하면 doGet메소드가 실행된다.)





​출처 : 신입SW인력을 위한 실전 JSP Servlet 동영상과정 -  제 04강 Servlet 맛보기

https://www.youtube.com/watch?v=MmxzA_0Vtoo&list=PLYBmkgNU_x7Zj0nCzt5D0qV33C_rU1NK2&index=4