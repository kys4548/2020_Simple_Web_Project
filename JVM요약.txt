JVM 주요 5가지 요소
-클래스 로더 시스템
-메모리
-실행 엔진
-java native interface
-native method library




클래스 로더 시스템
-로딩 : 	bootstrap, platform, application 클래스로더 존재 
	차례대로 내부에 해당 클래스가 있는지 확인 -> 없을시 ClassNotFoundException 발생하며 thread 죽음
	.class 파일을 읽어 FQCN, 종류(class, enum, interface), 메소드, 변수 등을 메모리 메소드 영역에 저장
	로딩이 끝나면 해당 객체의 class객체를 힙영역에 저장 ex) any.getClass();

-링크 : 	verify(검증), Prepare, Reolve(optional) 세단계로 이루어짐
	verify : .class 파일 형식이 유효한지 검사
	Prepare: static변수와 기본값에 필요한 메모리를 준비하는 과정
	Reolve : lazy loading과 연관있는 듯
-초기화
static변수들에 값을 할당한다.


메모리
-메소드 영역 (변수 매서드 등 기본값 저장)
-힙 영역(객체 저장)
-stack
-program counter
-native method stack : native method가 쌓이는 스택

stack, pc, native method stack은 각 스레드마다 다르다.
메소드, 힙 영역은 프로그램 내에서 공유 자원


실행 엔진
-인터프리터(class파일 한줄씩 실행)
-jit compiler(just in time) : 반복되는 코드를 미리 변환해놓고 인터프리터가 해당줄로 올시 바로 실행
-gc(garbage collection) : 안쓰는 객체 소멸


java native interface
native method library를 호출하는 interface

native method library
java언어가 아닌 언어로 이루어진 라이브러리